@using PagedList.Mvc;
@model PagedList.IPagedList<CurdwithMVC.Models.User>
@{
    ViewBag.Title = "GetUsers";
}

<h2>GetUsers</h2>

<p>
    <a href="@Url.Action("NewUser")" class="btn btn-primary">Create New</a>
</p>
<table class="table table-striped">
    <thead class="thead-dark bg-secondary">
        <tr class="p-4">
            <th> Id</th>
            <th>UserName</th>
            <th>Email</th>
            <th>MobileNumber</th>
            <th>SelectedCity</th>
            <th>Gender</th>
            <th>Hobbies</th>
            <th>IsActive</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                <td>@Html.DisplayFor(modelItem => item.UserName)</td>
                <td>@Html.DisplayFor(modelItem => item.Email)</td>
                <td>@Html.DisplayFor(modelItem => item.MobileNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.SelectedCity)</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@string.Join(", ", item.Hobbies)</td>
                <td>@Html.DisplayFor(modelItem => item.IsActive)</td>
                <td>
                    <a href="@Url.Action("Edit", "User", new { id = item.Id })" class="btn btn-primary">Edit</a>

                    <a href="@Url.Action("Delete","User", new {id = item.Id })" onclick="return confirm('Are you sure you want to delete?')" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Section Start -->
<div class="text-center mb-2">
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
</div>
<div class="d-flex justify-content-center">
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetUsers", new { page = 1 })" aria-label="First">
                    <span aria-hidden="true">&laquo;&laquo;</span>
                    <span class="sr-only">First</span>
                </a>
            </li>
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetUsers", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                    <span class="sr-only">Previous</span>
                </a>
            </li>
            @for (int i = 1; i <= Model.PageCount; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" href="@Url.Action("GetUsers", new { page = i })">@i</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetUsers", new { page = Model.PageNumber + 1 })" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                    <span class="sr-only">Next</span>
                </a>
            </li>
            <li class="page-item @(Model.PageNumber == Model.PageCount ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("GetUsers", new { page = Model.PageCount })" aria-label="Last">
                    <span aria-hidden="true">&raquo;&raquo;</span>
                    <span class="sr-only">Last</span>
                </a>
            </li>
        </ul>
    </nav>
</div>
<!-- Pagination Section End -->