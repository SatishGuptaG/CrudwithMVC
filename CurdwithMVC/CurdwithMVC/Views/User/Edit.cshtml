@model CurdwithMVC.Models.User

@{
    ViewBag.Title = "Edit";
}
<p>
    <a href="@Url.Action("GetUsers")" class="btn btn-primary">Create New</a>
</p>
<h2 class="text-center">Edit User</h2>
<div class="container-fluid min-vh-100 w-50 justify-content-center">

    <div class="mb-3" action="#">
        <label>Id</label>
        <input type="text" class="form-control" id="Id" disabled placeholder="Id" value="@Model.Id" onkeyup="validateForm()">
        <span id="IdError" class="text-danger"></span>
    </div>
    <div class="mb-3" action="#">
        <label>UserName</label>
        <input type="text" class="form-control" id="UserName" placeholder="UserName" value="@Model.UserName" onkeyup="validateForm()">
        <span id="NameError" class="text-danger"></span>
    </div>
    <div class="mb-3" action="#">
        <label>Email</label>
        <input type="email" class="form-control" id="Email" disabled placeholder="Email" value="@Model.Email" onkeyup="validateForm()">
        <span id="EmailError" class="text-danger"></span>
    </div>
    <div class="mb-3" action="#">
        <label>MobileNumber</label>
        <input type="number" class="form-control" id="MobileNumber" placeholder="MobileNumber" value="@Model.MobileNumber" onkeyup="validateForm()">
        <span id="MobileError" class="text-danger"></span>
    </div>
    <div class="mb-3" action="#">
        <label>Password</label>
        <input type="password" class="form-control" id="Password" placeholder="Password" value="@Model.Password" onkeyup="validateForm()">
        <span id="PasswordError" class="text-danger"></span>
    </div>
    @*  Select City Start *@
    <div class="mb-3">
        <label>Select City</label>
        <select class="form-control" id="SelectedCity" onchange="validateForm()">
            <option selected disabled value="">Select City</option>
            <option @(Model.SelectedCity == "Noida" ? "selected" : "")>Noida</option>
            <option @(Model.SelectedCity == "Mumbai" ? "selected" : "")>Mumbai</option>
            <option @(Model.SelectedCity == "Chennai" ? "selected" : "")>Chennai</option>
            <option @(Model.SelectedCity == "Pune" ? "selected" : "")>Pune</option>
            <option @(Model.SelectedCity == "Delhi" ? "selected" : "")>Delhi</option>
            <option @(Model.SelectedCity == "Ahmedabad" ? "selected" : "")>Ahmedabad</option>
            <option @(Model.SelectedCity == "Bangalore" ? "selected" : "")>Bangalore</option>
            <option @(Model.SelectedCity == "Kolkata" ? "selected" : "")>Kolkata</option>
            <option @(Model.SelectedCity == "Lucknow" ? "selected" : "")>Lucknow</option>
            <option @(Model.SelectedCity == "Surat" ? "selected" : "")>Surat</option>
        </select>
        <span id="SelectOptionError" class="text-danger"></span>
    </div>
    @*  Select City End *@

    @*   Hobby Section Start  *@

    <div class="mb-3" id="selectedHobbies">
        <label>Select Hobbies</label>
        <div class="form-check checkbox-select">
            <input class="form-check-input" type="checkbox" value="Cricket" id="cricket" @(Model.Hobbies != null && Model.Hobbies.Contains("Cricket") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="cricket">Cricket</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Football" id="football" @(Model.Hobbies != null && Model.Hobbies.Contains("Football") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="football">Football</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Kabaddi" id="kabaddi" @(Model.Hobbies != null && Model.Hobbies.Contains("Kabaddi") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="kabaddi">Kabaddi</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Reading" id="reading" @(Model.Hobbies != null && Model.Hobbies.Contains("Reading") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="reading">Reading</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Exercise" id="exercise" @(Model.Hobbies != null && Model.Hobbies.Contains("Exercise") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="exercise">Exercise</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Riding" id="riding" @(Model.Hobbies != null && Model.Hobbies.Contains("Riding") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="riding">Riding</label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="Travelling" id="travelling" @(Model.Hobbies != null && Model.Hobbies.Contains("Travelling") ? "checked" : "") onclick="validateForm()">
            <label class="form-check-label" for="travelling">Travelling</label>
        </div>
        <span id="HobbiesError" class="text-danger"></span>
    </div>
    @*   Hobby Section End *@

    @*  Gender Start *@
    <div class="mb-3">
        <label>Gender :</label>
        <div class="form-check-inline">
            <input class="form-check-input" id="Male" type="radio" name="gender" value="male" @(Model.Gender == "male" ? "checked" : "") onchange="validateForm()">
            <label for="Male">Male</label>
        </div>
        <div class="form-check-inline">
            <input class="form-check-input" id="Female" type="radio" name="gender" value="female" @(Model.Gender == "female" ? "checked" : "") onchange="validateForm()">
            <label for="Female">Female</label>
        </div>
        <div class="form-check-inline">
            <input class="form-check-input" id="Other" type="radio" name="gender" value="others" @(Model.Gender == "others" ? "checked" : "") onchange="validateForm()">
            <label for="Other">Other</label>
        </div>
        <span id="GenderError" class="text-danger"></span>
    </div>
    @*  Gender End *@

    @*  Active Start *@

    <div class="form-check form-switch">
        <input class="form-check-input" type="checkbox" role="switch" id="IsActive" @(Model.IsActive.HasValue && Model.IsActive.Value ? "checked" : "") onchange="updateActiveState()">
        <label class="form-check-label" for="IsActive">Active</label>
        <span id="ActiveStateDisplay" class="text-danger">@((Model.IsActive.HasValue && Model.IsActive.Value) ? "True" : "False")</span>
    </div>

    @*  Active End *@

    <button class="d-grid btn btn-primary w-50 mx-auto" type="submit" value="Save" onclick="submitI()">Save</button>

</div>

<div>
    @Html.ActionLink("Back to List", "GetUsers")
</div>

<script>
    function validateForm() {

        var ID = document.getElementById("Id").value;
        var userName = document.getElementById("UserName").value;
        var EMAIL = document.getElementById("Email").value;
        var MOBILE = document.getElementById("MobileNumber").value;
        var PASSWORD = document.getElementById("Password").value;
        var SelectOption = document.getElementById("SelectedCity").value;
        var selectedHobbies = document.querySelectorAll('input[type="checkbox"]:checked');
        var GenderError = document.querySelector('input[name="gender"]:checked').value;
       
        if (ID.length == 0) {
            document.getElementById('NameError').innerHTML = "Please Enter Your UserName";
            return false;
        } else {
            document.getElementById('NameError').innerHTML = "";
        }

        if (userName.length == 0) {
            document.getElementById('NameError').innerHTML = "Please Enter Your UserName";
            return false;
        } else {
            document.getElementById('NameError').innerHTML = "";
        }

        if (EMAIL.length == 0) {
            document.getElementById('EmailError').innerHTML = "Please Enter Your E-Mail";
            return false;
        } else {
            document.getElementById('EmailError').innerHTML = "";
        }

        if (MOBILE.length == 0) {
            document.getElementById('MobileError').innerHTML = "Please Enter Your Mobile Number";
            return false;
        } else {
            document.getElementById('MobileError').innerHTML = "";
        }

        if (PASSWORD.length == 0) {
            document.getElementById('PasswordError').innerHTML = "Please Enter Your Password";
            return false;
        } else {
            document.getElementById('PasswordError').innerHTML = "";
        }


        if (SelectOption === "") {
            document.getElementById('SelectOptionError').innerHTML = "Please Select a City";
            return false;
        } else {
            document.getElementById('SelectOptionError').innerHTML = "";
        }

        if (selectedHobbies.length === 0) {
            document.getElementById('HobbiesError').innerHTML = "Please select at least one hobby.";
            return false;
        } else {
            document.getElementById('HobbiesError').innerHTML = "";
        }

        if (GenderError === null) {
            document.getElementById('GenderError').innerHTML = "Please Select Your Gender";
            return false;
        } else {
            document.getElementById('GenderError').innerHTML = "";
        }

        // All validations passed
        return true;
    }

    function submitI() {

        if (!validateForm()) {
            return;
        }

        // If validation passes, fetch all field data and proceed with form submission

        var ID = document.getElementById("Id").value
        var userName = document.getElementById("UserName").value
        var EMAIL = document.getElementById("Email").value
        var MOBILE = document.getElementById("MobileNumber").value
        var PASSWORD = document.getElementById("Password").value
        var SelectOption = document.getElementById("SelectedCity").value
        var selectedHobbies = Array.from(document.querySelectorAll('input[type="checkbox"]:checked')).map(function (checkbox) {
            return checkbox.value;
        });
        var GenderError = document.querySelector('input[name="gender"]:checked').value;
        var IsActive = document.getElementById("IsActive").checked;
        // var CONFIRMPASSWORD = document.getElementById("ConfirmPassword").value.trim();

        // Create a FormData object to store the form data
        var formData = new FormData();
        formData.append("Id", ID);
        formData.append("UserName", userName);
        formData.append("Email", EMAIL);
        formData.append("MobileNumber", MOBILE);
        formData.append("Password", PASSWORD);
        formData.append("SelectedCity", SelectOption);
        formData.append("Gender", GenderError);
        // Append selected hobbies
        selectedHobbies.forEach(function (hobby) {
            formData.append("Hobbies[]", hobby);
        });
        formData.append("IsActive", IsActive);

        //  formData.append("ConfirmPassword", CONFIRMPASSWORD);

        // Send a POST request using fetch
        fetch("/User/UpsertUser", {
            method: "POST",
            body: formData
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Network response was not ok");
                }
                return response.json();
            })
            .then(response => {
                // Handle the response data as needed
                if (response.isValid == true) {

                    alert(response.message);

                    window.location.href = "/user/getusers";
                }
                else {
                    alert(response.message);
                }

                console.log(response);
            })
            .catch(error => {
                console.error("There was a problem with the fetch operation:", error);
            });
    }
     function updateActiveState() {
        var IsActive = document.getElementById("IsActive").checked;
        var activeStateDisplay = document.getElementById("ActiveStateDisplay");

        if (IsActive) {
            activeStateDisplay.textContent = "True";
        } else {
            activeStateDisplay.textContent = "False";
        }
    }
</script>